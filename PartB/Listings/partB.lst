A51 MACRO ASSEMBLER  PARTB                                                                03/12/2022 12:49:24 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\partB.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE partB.a51 SET(SMALL) DEBUG PRINT(.\Listings\partB.lst) OBJECT(.\Objects
                      \partB.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     ; This subroutine writes characters on the LCD
  00A0                 2     LCD_data equ P2    ;LCD Data port
  0080                 3     LCD_rs   equ P0.0  ;LCD Register Select
  0081                 4     LCD_rw   equ P0.1  ;LCD Read/Write
  0082                 5     LCD_en   equ P0.2  ;LCD Enable
                       6     
0000                   7     ORG 0000H
0000 02001E            8     ljmp start
                       9     
000B                  10     ORG 000BH
000B B287             11     CPL P0.7
000D C28C             12     CLR TR0
000F 32               13     RETI
                      14     
001B                  15     ORG 001BH
001B C28E             16     CLR TR1
001D 32               17     RETI
                      18     
001E                  19     start:
001E D2AF             20     SETB EA
0020 D2A9             21     SETB ET0
0022 D2AB             22     SETB ET1
0024 758911           23     MOV TMOD, #11H
                      24     
                      25     ;----State-0----
                      26     
0027 3196             27           acall delay
0029 3196             28               acall delay
002B 312B             29               acall lcd_init      ;initialise LCD
002D 3196             30               acall delay
002F 3196             31               acall delay
0031 3196             32               acall delay
0033 7480             33               mov a,#80h             ;Put cursor on first row,0 column
0035 3168             34               acall lcd_command      ;send command to LCD
0037 3196             35               acall delay
0039 901000           36               mov   dptr,#my_string1_s0   ;Load DPTR with sring1 Addr
003C 3188             37               acall lcd_sendstring     ;call text strings sending routine
003E 3196             38               acall delay
0040 74C0             39               mov a,#0C0h             ;Put cursor on second row,0 column
0042 3168             40               acall lcd_command
0044 3196             41               acall delay
0046 901011           42               mov   dptr,#my_string2_s0
0049 3188             43               acall lcd_sendstring
                      44               
                      45     ;---------------
004B                  46     mainLoop:
                      47     
                      48     ;----State-1----
                      49     
004B 784B             50               MOV R0, #75
004D 11F7             51               x1: CALL loadT1for10ms
004F D28E             52               SETB TR1
0051 208E05           53               y1: JB TR1, z1
0054 D8F7             54               DJNZ R0, x1
0056 020061           55               LJMP next1
0059 208CF5           56               z1: JB TR0, y1
005C 11FE             57               CALL loadN1
A51 MACRO ASSEMBLER  PARTB                                                                03/12/2022 12:49:24 PAGE     2

005E 020051           58               LJMP y1
0061                  59               next1:
                      60               
                      61     ;----State-2----
                      62     
0061 784B             63               MOV R0, #75
0063 11F7             64               x2: CALL loadT1for10ms
0065 D28E             65               SETB TR1
0067 208E05           66               y2: JB TR1, z2
006A D8F7             67               DJNZ R0, x2
006C 020077           68               LJMP next2
006F 208CF5           69               z2: JB TR0, y2
0072 3107             70               CALL loadN2
0074 020067           71               LJMP y2
0077                  72               next2:
                      73               
                      74     ;----State-3----
                      75     
0077 784B             76               MOV R0, #75
0079 11F7             77               x3: CALL loadT1for10ms
007B D28E             78               SETB TR1
007D 208E05           79               y3: JB TR1, z3
0080 D8F7             80               DJNZ R0, x3
0082 02008D           81               LJMP next3
0085 208CF5           82               z3: JB TR0, y3
0088 3110             83               CALL loadN3
008A 02007D           84               LJMP y3
008D                  85               next3:
                      86               
                      87     ;----State-4----
                      88     
008D 784B             89               MOV R0, #75
008F 11F7             90               x4: CALL loadT1for10ms
0091 D28E             91               SETB TR1
0093 208E05           92               y4: JB TR1, z4
0096 D8F7             93               DJNZ R0, x4
0098 0200A3           94               LJMP next4
009B 208CF5           95               z4: JB TR0, y4
009E 3107             96               CALL loadN2
00A0 020093           97               LJMP y4
00A3                  98               next4:
                      99               
                     100     ;----State-5----
                     101     
00A3 7864            102               MOV R0, #100
00A5 11F7            103               x5: CALL loadT1for10ms
00A7 D28E            104               SETB TR1
00A9 208E05          105               y5: JB TR1, z5
00AC D8F7            106               DJNZ R0, x5
00AE 0200B9          107               LJMP next5
00B1 208CF5          108               z5: JB TR0, y5
00B4 3119            109               CALL loadN4
00B6 0200A9          110               LJMP y5
00B9                 111               next5:
                     112               
                     113     ;----State-6----
00B9 C28C            114               CLR TR0
00BB C287            115               CLR P0.7
00BD 7832            116               MOV R0, #50
00BF 11F7            117               x6: CALL loadT1for10ms
00C1 D28E            118               SETB TR1
00C3 208EFD          119               y6: JB TR1, y6
00C6 D8F7            120               DJNZ R0, x6
00C8                 121               next6:
                     122               
                     123     ;----State-7----
A51 MACRO ASSEMBLER  PARTB                                                                03/12/2022 12:49:24 PAGE     3

                     124     
00C8 7864            125               MOV R0, #100
00CA 11F7            126               x7: CALL loadT1for10ms
00CC D28E            127               SETB TR1
00CE 208E05          128               y7: JB TR1, z7
00D1 D8F7            129               DJNZ R0, x7
00D3 0200DE          130               LJMP next7
00D6 208CF5          131               z7: JB TR0, y7
00D9 3119            132               CALL loadN4
00DB 0200CE          133               LJMP y7
00DE                 134               next7:
                     135               
                     136     ;----State-8----
                     137     
00DE 7864            138               MOV R0, #100
00E0 11F7            139               x8: CALL loadT1for10ms
00E2 D28E            140               SETB TR1
00E4 208E05          141               y8: JB TR1, z8
00E7 D8F7            142               DJNZ R0, x8
00E9 0200F4          143               LJMP next8
00EC 208CF5          144               z8: JB TR0, y8
00EF 3122            145               CALL loadN5
00F1 0200E4          146               LJMP y8
00F4                 147               next8:
00F4 02004B          148               LJMP mainLoop
                     149             
00F7                 150     loadT1for10ms:
00F7 758DB1          151     MOV TH1, #0B1H
00FA 758BE0          152     MOV TL1, #0E0H
00FD 22              153     RET
                     154     
00FE                 155     loadN1:
00FE 758CEE          156     MOV TH0, #0EEH
0101 758A3F          157     MOV TL0, #3FH
0104 D28C            158     SETB TR0
0106 22              159     RET
                     160     
0107                 161     loadN2:
0107 758CF0          162     MOV TH0, #0F0H
010A 758A30          163     MOV TL0, #30H
010D D28C            164     SETB TR0
010F 22              165     RET
                     166     
0110                 167     loadN3:
0110 758CF2          168     MOV TH0, #0F2H
0113 758AB7          169     MOV TL0, #0B7H
0116 D28C            170     SETB TR0
0118 22              171     RET
                     172     
0119                 173     loadN4:
0119 758CF5          174     MOV TH0, #0F5H
011C 758A72          175     MOV TL0, #72H
011F D28C            176     SETB TR0
0121 22              177     RET
                     178     
0122                 179     loadN5:
0122 758CF4          180     MOV TH0, #0F4H
0125 758A2A          181     MOV TL0, #2AH
0128 D28C            182     SETB TR0
012A 22              183     RET
                     184             
                     185     
                     186     ;------------------------LCD Initialisation routine----------------------------------------
                             ------------
012B                 187     lcd_init:
012B 75A038          188              mov   LCD_data,#38H  ;Function set: 2 Line, 8-bit, 5x7 dots
A51 MACRO ASSEMBLER  PARTB                                                                03/12/2022 12:49:24 PAGE     4

012E C280            189              clr   LCD_rs         ;Selected command register
0130 C281            190              clr   LCD_rw         ;We are writing in instruction register
0132 D282            191              setb  LCD_en         ;Enable H->L
0134 3196            192                      acall delay
0136 C282            193              clr   LCD_en
0138 3196            194                  acall delay
                     195     
013A 75A00C          196              mov   LCD_data,#0CH  ;Display on, Curson off
013D C280            197              clr   LCD_rs         ;Selected instruction register
013F C281            198              clr   LCD_rw         ;We are writing in instruction register
0141 D282            199              setb  LCD_en         ;Enable H->L
0143 3196            200                      acall delay
0145 C282            201              clr   LCD_en
                     202              
0147 3196            203                      acall delay
0149 75A001          204              mov   LCD_data,#01H  ;Clear LCD
014C C280            205              clr   LCD_rs         ;Selected command register
014E C281            206              clr   LCD_rw         ;We are writing in instruction register
0150 D282            207              setb  LCD_en         ;Enable H->L
0152 3196            208                      acall delay
0154 C282            209              clr   LCD_en
                     210              
0156 3196            211                      acall delay
                     212     
0158 75A006          213              mov   LCD_data,#06H  ;Entry mode, auto increment with no shift
015B C280            214              clr   LCD_rs         ;Selected command register
015D C281            215              clr   LCD_rw         ;We are writing in instruction register
015F D282            216              setb  LCD_en         ;Enable H->L
0161 3196            217                      acall delay
0163 C282            218              clr   LCD_en
                     219     
0165 3196            220                      acall delay
                     221              
0167 22              222              ret                  ;Return from routine
                     223     
                     224     ;-----------------------command sending routine-------------------------------------
0168                 225      lcd_command:
0168 F5A0            226              mov   LCD_data,A     ;Move the command to LCD port
016A C280            227              clr   LCD_rs         ;Selected command register
016C C281            228              clr   LCD_rw         ;We are writing in instruction register
016E D282            229              setb  LCD_en         ;Enable H->L
0170 3196            230                      acall delay
0172 C282            231              clr   LCD_en
0174 3196            232                      acall delay
                     233         
0176 22              234              ret  
                     235     ;-----------------------data sending routine-------------------------------------          
                                       
0177                 236      lcd_senddata:
0177 F5A0            237              mov   LCD_data,A     ;Move the command to LCD port
0179 D280            238              setb  LCD_rs         ;Selected data register
017B C281            239              clr   LCD_rw         ;We are writing
017D D282            240              setb  LCD_en         ;Enable H->L
017F 3196            241                      acall delay
0181 C282            242              clr   LCD_en
0183 3196            243              acall delay
0185 3196            244                      acall delay
0187 22              245              ret                  ;Return from busy routine
                     246     
                     247     ;-----------------------text strings sending routine-------------------------------------
0188                 248     lcd_sendstring:
0188 C0E0            249             push 0e0h
018A                 250             lcd_sendstring_loop:
018A E4              251                      clr   a                 ;clear Accumulator for any previous data
018B 93              252                      movc  a,@a+dptr         ;load the first character in accumulator
018C 6005            253                      jz    exit              ;go to exit if zero
A51 MACRO ASSEMBLER  PARTB                                                                03/12/2022 12:49:24 PAGE     5

018E 3177            254                      acall lcd_senddata      ;send first char
0190 A3              255                      inc   dptr              ;increment data pointer
0191 80F7            256                      sjmp  LCD_sendstring_loop    ;jump back to send the next character
0193 D0E0            257     exit:    pop 0e0h
0195 22              258              ret                     ;End of routine
                     259     
                     260     ;----------------------delay routine-----------------------------------------------------
0196 C000            261     delay:   push 0
0198 C001            262              push 1
019A 7801            263              mov r0,#1
019C 79FF            264     loop2:   mov r1,#255
019E D9FE            265              loop1:  djnz r1, loop1
01A0 D8FA            266              djnz r0, loop2
01A2 D001            267              pop 1
01A4 D000            268              pop 0 
01A6 22              269              ret
                     270     
                     271     ;------------- ROM text strings------------------------------------------------------------
                             ---
1000                 272     org 1000h
1000                 273     my_string1_s0:
1000 2020524F        274              DB   "  ROLLING TIME  ", 00H
1004 4C4C494E                
1008 47205449                
100C 4D452020                
1010 00                      
1011                 275     my_string2_s0:
1011 20202020        276                      DB   "                ", 00H            
1015 20202020                
1019 20202020                
101D 20202020                
1021 00                      
                     277                             
                     278     end
                                     
A51 MACRO ASSEMBLER  PARTB                                                                03/12/2022 12:49:24 PAGE     6

SYMBOL TABLE LISTING
------ ----- -------


N A M E              T Y P E  V A L U E   ATTRIBUTES

DELAY . . . . . . .  C ADDR   0196H   A   
EA. . . . . . . . .  B ADDR   00A8H.7 A   
ET0 . . . . . . . .  B ADDR   00A8H.1 A   
ET1 . . . . . . . .  B ADDR   00A8H.3 A   
EXIT. . . . . . . .  C ADDR   0193H   A   
LCD_COMMAND . . . .  C ADDR   0168H   A   
LCD_DATA. . . . . .  D ADDR   00A0H   A   
LCD_EN. . . . . . .  B ADDR   0080H.2 A   
LCD_INIT. . . . . .  C ADDR   012BH   A   
LCD_RS. . . . . . .  B ADDR   0080H.0 A   
LCD_RW. . . . . . .  B ADDR   0080H.1 A   
LCD_SENDDATA. . . .  C ADDR   0177H   A   
LCD_SENDSTRING. . .  C ADDR   0188H   A   
LCD_SENDSTRING_LOOP  C ADDR   018AH   A   
LOADN1. . . . . . .  C ADDR   00FEH   A   
LOADN2. . . . . . .  C ADDR   0107H   A   
LOADN3. . . . . . .  C ADDR   0110H   A   
LOADN4. . . . . . .  C ADDR   0119H   A   
LOADN5. . . . . . .  C ADDR   0122H   A   
LOADT1FOR10MS . . .  C ADDR   00F7H   A   
LOOP1 . . . . . . .  C ADDR   019EH   A   
LOOP2 . . . . . . .  C ADDR   019CH   A   
MAINLOOP. . . . . .  C ADDR   004BH   A   
MY_STRING1_S0 . . .  C ADDR   1000H   A   
MY_STRING2_S0 . . .  C ADDR   1011H   A   
NEXT1 . . . . . . .  C ADDR   0061H   A   
NEXT2 . . . . . . .  C ADDR   0077H   A   
NEXT3 . . . . . . .  C ADDR   008DH   A   
NEXT4 . . . . . . .  C ADDR   00A3H   A   
NEXT5 . . . . . . .  C ADDR   00B9H   A   
NEXT6 . . . . . . .  C ADDR   00C8H   A   
NEXT7 . . . . . . .  C ADDR   00DEH   A   
NEXT8 . . . . . . .  C ADDR   00F4H   A   
P0. . . . . . . . .  D ADDR   0080H   A   
P2. . . . . . . . .  D ADDR   00A0H   A   
START . . . . . . .  C ADDR   001EH   A   
TH0 . . . . . . . .  D ADDR   008CH   A   
TH1 . . . . . . . .  D ADDR   008DH   A   
TL0 . . . . . . . .  D ADDR   008AH   A   
TL1 . . . . . . . .  D ADDR   008BH   A   
TMOD. . . . . . . .  D ADDR   0089H   A   
TR0 . . . . . . . .  B ADDR   0088H.4 A   
TR1 . . . . . . . .  B ADDR   0088H.6 A   
X1. . . . . . . . .  C ADDR   004DH   A   
X2. . . . . . . . .  C ADDR   0063H   A   
X3. . . . . . . . .  C ADDR   0079H   A   
X4. . . . . . . . .  C ADDR   008FH   A   
X5. . . . . . . . .  C ADDR   00A5H   A   
X6. . . . . . . . .  C ADDR   00BFH   A   
X7. . . . . . . . .  C ADDR   00CAH   A   
X8. . . . . . . . .  C ADDR   00E0H   A   
Y1. . . . . . . . .  C ADDR   0051H   A   
Y2. . . . . . . . .  C ADDR   0067H   A   
Y3. . . . . . . . .  C ADDR   007DH   A   
Y4. . . . . . . . .  C ADDR   0093H   A   
Y5. . . . . . . . .  C ADDR   00A9H   A   
Y6. . . . . . . . .  C ADDR   00C3H   A   
Y7. . . . . . . . .  C ADDR   00CEH   A   
Y8. . . . . . . . .  C ADDR   00E4H   A   
Z1. . . . . . . . .  C ADDR   0059H   A   
A51 MACRO ASSEMBLER  PARTB                                                                03/12/2022 12:49:24 PAGE     7

Z2. . . . . . . . .  C ADDR   006FH   A   
Z3. . . . . . . . .  C ADDR   0085H   A   
Z4. . . . . . . . .  C ADDR   009BH   A   
Z5. . . . . . . . .  C ADDR   00B1H   A   
Z7. . . . . . . . .  C ADDR   00D6H   A   
Z8. . . . . . . . .  C ADDR   00ECH   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
